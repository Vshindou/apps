import 'package:flutter/material.dart';

class Note {
  final String title;
  final String content;

  Note({this.title, this.content});
}

class NoteList extends StatefulWidget {
  @override
  _NoteListState createState() => _NoteListState();
}

class _NoteListState extends State<NoteList> {
  List<Note> _notes = [];

  void _addNote(String title, String content) {
    setState(() {
      _notes.add(Note(title: title, content: content));
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text("Notes"),
      ),
      body: ListView.builder(
        itemCount: _notes.length,
        itemBuilder: (context, index) {
          return ListTile(
            title: Text(_notes[index].title),
            onTap: () {
              Navigator.push(
                context,
                MaterialPageRoute(
                  builder: (context) => NoteDetail(
                    note: _notes[index],
                  ),
                ),
              );
            },
          );
        },
      ),
      floatingActionButton: FloatingActionButton(
        child: Icon(Icons.add),
        onPressed: () {
          Navigator.push(
            context,
            MaterialPageRoute(
              builder: (context) => NoteEditor(
                onSave: (title, content) => _addNote(title, content),
              ),
            ),
          );
        },
      ),
    );
  }
}

class NoteEditor extends StatefulWidget {
  final void Function(String, String) onSave;

  NoteEditor({this.onSave});

  @override
  _NoteEditorState createState() => _NoteEditorState();
}

class _NoteEditorState extends State<NoteEditor> {
  final _formKey = GlobalKey<FormState>();
  String _title;
  String _content;

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text("New Note"),
        actions: [
          FlatButton(
            child: Text("Save"),
            onPressed: () {
              if (_formKey.currentState.validate()) {
                _formKey.currentState.save();
                widget.onSave(_title, _content);
                Navigator.pop(context);
              }
            },
          ),
        ],
      ),
      body: Form(
        key: _formKey,
        child: Column(
          children: [
            TextFormField(
              decoration: InputDecoration(labelText: "Title"),
              validator: (value) {
                if (value.isEmpty) {
                  return "Please enter a title";
                }
                return null;
              },
              onSaved: (value) => _title = value,
            ),
            TextFormField(
              decoration: InputDecoration(labelText: "Content"),
              onSaved
